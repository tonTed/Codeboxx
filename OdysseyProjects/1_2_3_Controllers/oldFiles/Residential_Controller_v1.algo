Columns		: 1
Elevators	: 2
Floors		: 10

Objects to control:
	- Column
	- Elevetor
	- Call butons:
		- Floor 1: 
			> go up
		- Floor 2:
			> go down
			> go up
		- Floor 3:
			> go down
			> go up
		- Floor 4:
			> go down
			> go up
		- Floor 5:
			> go down
			> go up
		- Floor 6:
			> go down
			> go up

	- Doors
	- Floors butons


additional considerations :
	- doors floors

********************************************************************************************************************************************************************************************************
										DEFINE CLASS
********************************************************************************************************************************************************************************************************

Column:
	callButtonUp: FALSE				// FALSE or TRUE
	actionQueu: []					// list pending actions

Elevator:
	currentFloor: 1					// integer according to number of floors
	currentMovement: stationary		// stationary, goUp, goDown
	actionQueu:[]					// list pending actions
	doorOpen: FALSE					// FALSE or TRUE
	doorClose: TRUE					// FALSE or TRUE


********************************************************************************************************************************************************************************************************
										DEFINE FUNCTIONS
********************************************************************************************************************************************************************************************************

SEQUENCE closeDoor
	WHILE door path is blocked DO
		wait 3 seconds
	ENDWHILE
	SET doorOpen TO FALSE
	close door
	SET doorClose TO TRUE
ENDSEQUENCE

SEQUENCE openDoor
	SET currentMovement TO stationary		
	SET doorClose TO FALSE
	open door
	SET doorOpen TO TRUE
	wait 8 seconds
	CALL closeDoor
ENDSEQUENCE

SEQUENCE moveElevator USING buttonFloor AND elevatorFloor
	IF buttonFloor > elevatorFloor THEN
		go down 															// FORWARD > queu 
		SET currentMovement to goDown
	ELSE 
		go up																// FORWARD > queu 
		SET currentMovement TO goUp
	ENDIF
	stop on buttonFloor
	SET currentFloor TO buttonFloor											// FORWARD set by column with sensor
	CALL openDoor
ENDSEQUENCE

WHILE elevator is on
	IF callButtonUP is PRESSED THEN
		IF elevatorFloor = callButtonFloor THEN								/-- REFACTORING #1
			CALL openDoor
		ELSE
			CALL moveElevator WITH callButtonFloor AND elevatorFloor
		ENDIF																REFACTORING #1--/
	ENDIF

	IF elevatorFloorButton is PRESSED THEN
		IF doorClose = FALSE THEN
			CALL closeDoor
		ENDIF
		IF elevatorFloor = elevatorFloorButton THEN							/-- REFACTORING #1
			CALL openDoor
		ELSE
			CALL moveElevator WITH elevatorFloorButton AND elevatorFloor
		ENDIF																REFACTORING #1--/
	ENDIF

	IF elevatorCloseButton is PRESSED AND doorClose = FALSE THEN
		CALL closeDoor
	ENDIF

	IF elevatorOpenButton is PRESSED AND doorOpen = FALSE THEN
		IF doorClose = FALSE
			CALL openDoor
		ELSE IF doorClose = TRUE AND currentMovement = stationary
			CALL openDoor
		ENDIF
	ENDIF
ENDWHILE

